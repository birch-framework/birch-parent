#!/bin/bash

#================================================================
# Copyright (c) 2021 Birch Framework
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# any later version.
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.
#================================================================

#
# Do not deviate from default tag naming convention of <artifactId>-<version>
# where <version> is in the format <major>.<minor>.<release>
#
CURRENT_BRANCH=$(git rev-parse --abbrev-ref HEAD)

git checkout master
[ $? -ne 0 ] && exit 2

git pull
[ $? -ne 0 ] && exit 3

mvn clean install
[ $? -ne 0 ] && exit 4

ARTIFACT_VERSION=$(mvn org.apache.maven.plugins:maven-help-plugin:3.1.0:evaluate -Dexpression=project.version -q -DforceStdout)
ARTIFACT_ID=$(mvn org.apache.maven.plugins:maven-help-plugin:3.1.0:evaluate -Dexpression=project.artifactId -q -DforceStdout)
[ $? -ne 0 ] && exit 5

VERSION=$(echo ${ARTIFACT_VERSION%%-*})
read -e -p "Release version: " -i ${VERSION} VERSION
NEXT_VERSION=`echo "${VERSION%.*}.$((${VERSION##*.}+1))"`
read -e -p "Next development version: " -i ${NEXT_VERSION}-SNAPSHOT NEXT_VERSION
[ $? -ne 0 ] && exit 6

TAG=${ARTIFACT_ID}-${VERSION}
git tag -a ${TAG} -m "release ${VERSION}"
[ $? -ne 0 ] && exit 7

mvn versions:set -q -DnewVersion=${NEXT_VERSION} -DgenerateBackupPoms=false
[ $? -ne 0 ] && exit 8

sed -e "s|<birch.version>.*</birch.version>|<birch.version>${NEXT_VERSION}</birch.version>|g" birch-starter/pom.xml > birch-starter/pom.xml.new
mv birch-starter/pom.xml.new birch-starter/pom.xml
[ $? -ne 0 ] && exit 8

find . -name pom.xml -exec git add {} +
[ $? -ne 0 ] && exit 9

git commit -m "release ${VERSION}"
[ $? -ne 0 ] && exit 10

git push && git push --tags
[ $? -ne 0 ] && exit 11

git checkout ${TAG} -b release/${VERSION}
[ $? -ne 0 ] && exit 12

mvn versions:set -q -DnewVersion=${VERSION} -DgenerateBackupPoms=false
[ $? -ne 0 ] && exit 13

find . -name pom.xml -exec git add {} +
[ $? -ne 0 ] && exit 14

git commit -m "New release"
[ $? -ne 0 ] && exit 15

git push --set-upstream origin release/${VERSION}
[ $? -ne 0 ] && exit 16

git checkout ${CURRENT_BRANCH}